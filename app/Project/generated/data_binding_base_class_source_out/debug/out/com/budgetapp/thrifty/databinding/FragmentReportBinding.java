// Generated by view binder compiler. Do not edit!
package com.budgetapp.thrifty.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.budgetapp.thrifty.R;
import com.github.mikephil.charting.charts.BarChart;
import com.github.mikephil.charting.charts.PieChart;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentReportBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BarChart barChart;

  @NonNull
  public final PieChart pieChart;

  @NonNull
  public final TextView rankingEmptyMessage;

  @NonNull
  public final RecyclerView rankingRecyclerView;

  @NonNull
  public final MaterialTextView rankingToggle;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final MaterialTextView sortToggle;

  @NonNull
  public final ConstraintLayout topReportbar;

  @NonNull
  public final TextView trendToggle;

  @NonNull
  public final TextView tvBalanceAmount;

  @NonNull
  public final TextView tvCurrentBalance;

  @NonNull
  public final TextView tvExpenseLabel;

  @NonNull
  public final TextView tvIncomeLabel;

  @NonNull
  public final TextView tvTotalExpense;

  @NonNull
  public final TextView tvTotalIncome;

  @NonNull
  public final Guideline verticalGuideline;

  private FragmentReportBinding(@NonNull ConstraintLayout rootView, @NonNull BarChart barChart,
      @NonNull PieChart pieChart, @NonNull TextView rankingEmptyMessage,
      @NonNull RecyclerView rankingRecyclerView, @NonNull MaterialTextView rankingToggle,
      @NonNull ScrollView scrollView, @NonNull MaterialTextView sortToggle,
      @NonNull ConstraintLayout topReportbar, @NonNull TextView trendToggle,
      @NonNull TextView tvBalanceAmount, @NonNull TextView tvCurrentBalance,
      @NonNull TextView tvExpenseLabel, @NonNull TextView tvIncomeLabel,
      @NonNull TextView tvTotalExpense, @NonNull TextView tvTotalIncome,
      @NonNull Guideline verticalGuideline) {
    this.rootView = rootView;
    this.barChart = barChart;
    this.pieChart = pieChart;
    this.rankingEmptyMessage = rankingEmptyMessage;
    this.rankingRecyclerView = rankingRecyclerView;
    this.rankingToggle = rankingToggle;
    this.scrollView = scrollView;
    this.sortToggle = sortToggle;
    this.topReportbar = topReportbar;
    this.trendToggle = trendToggle;
    this.tvBalanceAmount = tvBalanceAmount;
    this.tvCurrentBalance = tvCurrentBalance;
    this.tvExpenseLabel = tvExpenseLabel;
    this.tvIncomeLabel = tvIncomeLabel;
    this.tvTotalExpense = tvTotalExpense;
    this.tvTotalIncome = tvTotalIncome;
    this.verticalGuideline = verticalGuideline;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentReportBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentReportBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_report, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentReportBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barChart;
      BarChart barChart = ViewBindings.findChildViewById(rootView, id);
      if (barChart == null) {
        break missingId;
      }

      id = R.id.pieChart;
      PieChart pieChart = ViewBindings.findChildViewById(rootView, id);
      if (pieChart == null) {
        break missingId;
      }

      id = R.id.ranking_empty_message;
      TextView rankingEmptyMessage = ViewBindings.findChildViewById(rootView, id);
      if (rankingEmptyMessage == null) {
        break missingId;
      }

      id = R.id.rankingRecyclerView;
      RecyclerView rankingRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (rankingRecyclerView == null) {
        break missingId;
      }

      id = R.id.rankingToggle;
      MaterialTextView rankingToggle = ViewBindings.findChildViewById(rootView, id);
      if (rankingToggle == null) {
        break missingId;
      }

      id = R.id.scrollView;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.sortToggle;
      MaterialTextView sortToggle = ViewBindings.findChildViewById(rootView, id);
      if (sortToggle == null) {
        break missingId;
      }

      id = R.id.topReportbar;
      ConstraintLayout topReportbar = ViewBindings.findChildViewById(rootView, id);
      if (topReportbar == null) {
        break missingId;
      }

      id = R.id.trendToggle;
      TextView trendToggle = ViewBindings.findChildViewById(rootView, id);
      if (trendToggle == null) {
        break missingId;
      }

      id = R.id.tvBalanceAmount;
      TextView tvBalanceAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvBalanceAmount == null) {
        break missingId;
      }

      id = R.id.tvCurrentBalance;
      TextView tvCurrentBalance = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentBalance == null) {
        break missingId;
      }

      id = R.id.tvExpenseLabel;
      TextView tvExpenseLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvExpenseLabel == null) {
        break missingId;
      }

      id = R.id.tvIncomeLabel;
      TextView tvIncomeLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvIncomeLabel == null) {
        break missingId;
      }

      id = R.id.tvTotalExpense;
      TextView tvTotalExpense = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalExpense == null) {
        break missingId;
      }

      id = R.id.tvTotalIncome;
      TextView tvTotalIncome = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalIncome == null) {
        break missingId;
      }

      id = R.id.verticalGuideline;
      Guideline verticalGuideline = ViewBindings.findChildViewById(rootView, id);
      if (verticalGuideline == null) {
        break missingId;
      }

      return new FragmentReportBinding((ConstraintLayout) rootView, barChart, pieChart,
          rankingEmptyMessage, rankingRecyclerView, rankingToggle, scrollView, sortToggle,
          topReportbar, trendToggle, tvBalanceAmount, tvCurrentBalance, tvExpenseLabel,
          tvIncomeLabel, tvTotalExpense, tvTotalIncome, verticalGuideline);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
